AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  my-sam-app

  Sample SAM Template for my-sam-app

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:

#  MyFunctionRole:
#    Type: AWS::IAM::Role
#    Properties:
#      AssumeRolePolicyDocument:
#        Version: '2012-10-17'
#        Statement:
#          - Effect: Allow
#            Principal:
#              Service: lambda.amazonaws.com
#            Action: sts:AssumeRole
#        ManagedPolicyArns:
#          - arn:aws:iam::aws:policy/servicerole/AWSLambdaBasicExecutionRole


  ProcessRevenue:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Role: arn:aws:iam::694992456702:role/mylambda-execute-s3-file
      CodeUri: code/
      Handler: lambda_function.lambda_handler
      Runtime: python3.8

  MyLayer:
    Type: Custom::PipLayer
    Properties:
      ServiceToken: !GetAtt ProcessRevenue.Arn
      Region: !Ref AWS::Region
      LayerName: mylayer
      Packages:
        - pandas>1.0
        - boto3
        - pytest
        - pandasql
#

#  HelloWorldFunction:
#    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
#    Properties:
#      Role: arn:aws:iam::694992456702:role/mylambda-execute-s3-file
#      CodeUri: hello_world/
#      Handler: app.lambda_handler
#      Runtime: python3.7
#      Events:
#        HelloWorld:
#          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
#          Properties:
#            Path: /hello
#            Method: get
#
